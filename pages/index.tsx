import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import { useEffect, useState } from "react";
import { WORDS } from "../assets/words";
import Board from "../components/Board";
import Keyboard from "../components/Keyboard";
import useWordle from "../hooks/useWordle";
import styles from "../styles/Home.module.scss";

const Home: NextPage = () => {
  const { handleKeyUp, boardWords } = useWordle();
  const correctWord = "apple";
  // const [boardWords, setBoardWords] = useState<string[]>([
  //   "",
  //   "",
  //   "",
  //   "",
  //   "",
  //   "",
  // ]);
  const [checkWords, setCheckWords] = useState([
    ["", "", "", "", ""],
    ["", "", "", "", ""],
    ["", "", "", "", ""],
    ["", "", "", "", ""],
    ["", "", "", "", ""],
    ["", "", "", "", ""],
  ]);
  const [gameWon, setGameWon] = useState(false);
  const [loading, setLoading] = useState(true);
  let wordListNumber = 0;
  let WordCound = 0;
  const [keyboardWords, setKeyboardWords] = useState({});
  // let keyboardWords: Record<string, any> = {};

  // useEffect(() => {
  //   window.addEventListener("keydown", function (event) {
  //     if (event.keyCode >= 65 && event.keyCode <= 90) {
  //       if (WordCound < 5) {
  //         WordCound++;

  //         setBoardWords((prev) => {
  //           const newBoardWords = [...prev];
  //           newBoardWords[wordListNumber] =
  //             newBoardWords[wordListNumber] + event.key;
  //           return newBoardWords;
  //         });
  //       }
  //     }

  //     if (event.code === "Backspace") {
  //       WordCound--;
  //       setBoardWords((prev) => {
  //         const newBoardWords = [...prev];
  //         newBoardWords[wordListNumber] = newBoardWords[wordListNumber].slice(
  //           0,
  //           -1
  //         );
  //         return newBoardWords;
  //       });
  //     }

  //     if (WordCound === 5 && event.keyCode === 13) {
  //       // if (WORDS.includes(boardWords))
  //       console.log(wordListNumber);
  //       console.log(boardWords);
  //       WordCound = 0;
  //       wordListNumber++;
  //     }
  //   });
  // }, []);

  const addWord = (char: string) => {};

  const removeWord = () => {};

  const checkWord = (word: string) => {};

  // useEffect(() => {
  //   let word = boardWords[wordListNumber];
  //   console.log("object", word);
  //   const keyDownHandler = (event: KeyboardEvent) => {
  //     if (event.keyCode >= 65 && event.keyCode <= 90) {
  //       if (WordCound < 5) {
  //         WordCound++;
  //         word += event.key;
  //         addWord(event.key);
  //         //   const newBoardWords = [...prev];
  //         //   newBoardWords[wordListNumber] = word;
  //         //   return newBoardWords;
  //         // });
  //       }
  //     }

  //     if (event.code === "Backspace") {
  //       WordCound--;
  //       word = word.slice(0, -1);
  //       //   const newBoardWords = [...prev];
  //       //   newBoardWords[wordListNumber] = newBoardWords[wordListNumber].slice(
  //       //     0,
  //       //     -1
  //       //   );
  //       //   return newBoardWords;
  //       // });
  //       removeWord();
  //     }

  //     if (event.key === "Enter" && WordCound === 5) {
  //       console.log(boardWords);
  //       if (WORDS.includes(word)) {
  //         checkWord(word);
  //         WordCound = 0;
  //         wordListNumber++;
  //         word = "";
  //       } else {
  //         alert("word is not valid");
  //       }
  //     }
  //   };

  //   document.addEventListener("keydown", keyDownHandler);
  //   return () => {
  //     document.removeEventListener("keydown", keyDownHandler);
  //   };
  // }, []);

  useEffect(() => {
    // const keyDownHandler = (event: KeyboardEvent) => {
    //   keyTyped(event);
    // };

    document.addEventListener("keyup", handleKeyUp);
    return () => {
      document.removeEventListener("keyup", handleKeyUp);
    };
  }, [handleKeyUp]);

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <div className={styles.container}>
          <div className={styles.container__grid}>
            {[...Array(6)].map((word, index) => (
              <Board
                key={index}
                word={boardWords[index]}
                position={checkWords[index]}
              />
            ))}
          </div>
          <div className={styles.container__keyboard}>
            <Keyboard
              onEnter={checkWord}
              onAdd={addWord}
              onDelete={removeWord}
              keyboardWords={keyboardWords}
            />
          </div>
        </div>
      </main>
    </div>
  );
};

export default Home;
